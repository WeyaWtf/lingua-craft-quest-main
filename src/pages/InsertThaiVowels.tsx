import { useState } from "react";
import { useNavigate } from "react-router-dom";
import { supabase } from "@/lib/supabase";
import { Button } from "@/components/ui/button";
import { toast } from "sonner";
import Navigation from "@/components/Navigation";

const InsertThaiVowels = () => {
  const navigate = useNavigate();
  const [isInserting, setIsInserting] = useState(false);

  const insertThaiVowels = async () => {
    setIsInserting(true);

    const vowelsData = {
      vowels_simple_row: [
        { char: "‚óå‡∏∞", romaji: "a" },
        { char: "‚óå‡∏±", romaji: "a" },
        { char: "‚óå‡∏≤", romaji: "ƒÅ" },
        { char: "‚óå‡∏≥", romaji: "am" },
        { char: "‚óå‡∏¥", romaji: "i" },
        { char: "‚óå‡∏µ", romaji: "ƒ´" },
        { char: "‚óå‡∏∂", romaji: "∆∞" },
        { char: "‚óå‡∏∑", romaji: "∆∞ÃÑ" },
        { char: "‚óå‡∏∏", romaji: "u" },
        { char: "‚óå‡•Ç", romaji: "≈´" }
      ],
      vowels_complex_row: [
        { char: "‡πÄ‚óå", romaji: "e" },
        { char: "‡πÅ‚óå", romaji: "√¶" },
        { char: "‡πÇ‚óå", romaji: "o" },
        { char: "‡πÉ‚óå", romaji: "ai" },
        { char: "‡πÑ‚óå", romaji: "ai" },
        { char: "‡πÄ‚óå‡∏≤", romaji: "ao" },
        { char: "‚óå‡∏±‡∏ß", romaji: "ua" },
        { char: "‡πÄ‚óå‡∏µ‡∏¢", romaji: "ia" },
        { char: "‡πÄ‚óå‡∏∑‡∏≠", romaji: "∆∞ÃÑa" }
      ],
      tone_marks_row: [
        { char: "‚óå‡πà", romaji: "tone 1 (mai ek)" },
        { char: "‚óå‡πâ", romaji: "tone 2 (mai tho)" },
        { char: "‚óå‡πä", romaji: "tone 3 (mai tri)" },
        { char: "‚óå‡πã", romaji: "tone 4 (mai chattawa)" }
      ],
      special_marks_row: [
        { char: "‚óå‡πå", romaji: "cancellation mark" },
        { char: "‡πÜ", romaji: "repetition" },
        { char: "‡∏Ø", romaji: "abbreviation" },
        { char: "‡∏Ø‡∏•‡∏Ø", romaji: "et cetera" }
      ],
      numbers_row: [
        { char: "‡πê", romaji: "0" },
        { char: "‡πë", romaji: "1" },
        { char: "‡πí", romaji: "2" },
        { char: "‡πì", romaji: "3" },
        { char: "‡πî", romaji: "4" },
        { char: "‡πï", romaji: "5" },
        { char: "‡πñ", romaji: "6" },
        { char: "‡πó", romaji: "7" },
        { char: "‡πò", romaji: "8" },
        { char: "‡πô", romaji: "9" }
      ]
    };

    const exerciseData = {
      type: "flashcard",
      title: "Thai Vowels & Diacritics - Voyelles et signes diacritiques tha√Øs",
      description: "Apprenez les voyelles simples et complexes, les marques tonales, les signes sp√©ciaux et les chiffres tha√Øs - Cliquez sur chaque caract√®re pour r√©v√©ler sa prononciation",
      difficulty: 1,
      source: "official",
      language: "thai",
      tags: ["vowels", "voyelles", "diacritics", "tones", "thai", "tha√Ø", "numbers", "beginner"],
      content: { ...JSON.parse(JSON.stringify(vowelsData)), alphabetMode: true },
      author_id: "demo",
      is_published: true
    };

    try {
      const { data, error } = await supabase
        .from('exercises')
        .insert([exerciseData])
        .select()
        .single();

      if (error) {
        console.error('Erreur lors de l\'insertion:', error);
        toast.error(`Erreur: ${error.message || "Erreur lors de la cr√©ation de l'exercice"}`);
        setIsInserting(false);
        return;
      }

      console.log('‚úÖ Exercice Thai Vowels & Diacritics cr√©√©:', data);
      toast.success("Exercice Thai Vowels & Diacritics cr√©√© avec succ√®s !");
      setTimeout(() => navigate("/catalog"), 1500);
    } catch (err) {
      console.error('Erreur:', err);
      toast.error("Erreur lors de la cr√©ation");
      setIsInserting(false);
    }
  };

  return (
    <div className="min-h-screen bg-background">
      <Navigation />
      <div className="max-w-2xl mx-auto px-4 py-16">
        <div className="text-center space-y-6">
          <h1 className="text-3xl font-bold text-foreground">
            üî§ Ins√©rer l'exercice Thai Vowels & Diacritics
          </h1>
          <p className="text-muted-foreground">
            Cet exercice contient les voyelles, marques tonales et chiffres tha√Øs
          </p>

          <div className="bg-card border border-border rounded-lg p-6 space-y-3">
            <div className="flex items-center justify-between">
              <span className="text-sm text-muted-foreground">Type:</span>
              <span className="font-semibold">Voyelles & Diacritiques</span>
            </div>
            <div className="flex items-center justify-between">
              <span className="text-sm text-muted-foreground">Contenu:</span>
              <span className="font-semibold">Voyelles, Tons, Marques, Chiffres</span>
            </div>
            <div className="flex items-center justify-between">
              <span className="text-sm text-muted-foreground">Difficult√©:</span>
              <span className="font-semibold">D√©butant</span>
            </div>
          </div>

          <Button
            onClick={insertThaiVowels}
            disabled={isInserting}
            size="lg"
            className="w-full"
          >
            {isInserting ? "Insertion en cours..." : "‚úÖ Ins√©rer l'exercice dans la base de donn√©es"}
          </Button>

          <Button
            variant="outline"
            onClick={() => navigate("/catalog")}
            className="w-full"
          >
            Retour au catalogue
          </Button>
        </div>
      </div>
    </div>
  );
};

export default InsertThaiVowels;
